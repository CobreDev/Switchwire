[include fluidd.cfg]
[include mainsail.cfg]
[include macros.cfg]
[include ebb36.cfg]
[include display.cfg]
[include stealthburner_leds.cfg]
[include KAMP_Settings.cfg]
# [include ./KAMP/Adaptive_Meshing.cfg]       # Include to enable adaptive meshing configuration.
[include ./KAMP/Line_Purge.cfg]             # Include to enable adaptive line purging configuration.
#[include ./KAMP/Voron_Purge.cfg]            # Include to enable adaptive Voron logo purging configuration.
#[include ./KAMP/Smart_Park.cfg]             # Include to enable the Smart Park function, which parks the printhead near the print area for final heating.
[include ./Klicky/klicky-variables.cfg]                #Required
[include ./Klicky/klicky-macros.cfg]                   #Required
[include ./Klicky/klicky-bed-mesh-calibrate.cfg]       #bed mesh, requires klipper configuration
[include ./Klicky/klicky-screws-tilt-calculate.cfg]    #help adjust bed screws automatically

[exclude_object]
# [resonance_holder]

[gcode_arcs]
resolution: 0.1

[virtual_sdcard]
path: /home/biqu/printer_data/gcodes
on_error_gcode: CANCEL_PRINT

[force_move]
enable_force_move: True

###############
### Printer ###
###############
[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32g0b1xx_4E00230002504B5735313920-if00
restart_method: command

[printer]
kinematics: limited_corexz
max_velocity: 500
max_x_accel: 8900
max_y_accel:3700
max_z_accel: 1000
max_accel: 3700 # 12,750 as found by ellis macro

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PB5,  EXP1_3=PA9,   EXP1_5=PA10, EXP1_7=PB8, EXP1_9=<GND>,
    EXP1_2=PA15, EXP1_4=<RST>, EXP1_6=PB9,  EXP1_8=PD6, EXP1_10=<5V>
    
#####################
### ADXL345 config ##
#####################

[mcu pipico] 
serial: /dev/serial/by-id/usb-Klipper_rp2040_E6614C311B20A838-if00
is_non_critical: true

[adxl345]
spi_bus: spi0a
cs_pin: pipico:gpio1

[resonance_tester]
accel_chip: adxl345
probe_points:
    110, 115, 50
accel_per_hz: 100

######################
### Stepper Motors ###
######################
[stepper_x]
step_pin: PB0
dir_pin: !PC5
enable_pin: !PB1
microsteps: 64
rotation_distance: 40
endstop_pin: ^EBB: PB6
position_endstop: 217
position_max: 217
homing_speed: 125
second_homing_speed: 150

[stepper_y]
step_pin: PB10
dir_pin: PB2
enable_pin: !PB11
microsteps: 64
rotation_distance: 40
endstop_pin: ^PC2
position_endstop: 0
position_max: 247
position_min: 0
homing_speed: 125
second_homing_speed: 150

[stepper_z]
step_pin: PB13
dir_pin: !PB12
enable_pin: !PB14
microsteps: 64
rotation_distance: 40
endstop_pin: probe:z_virtual_endstop
position_max: 215
position_min: -8
homing_speed: 20
second_homing_speed: 10

[autotune_tmc stepper_x]
motor: omc-17hs19-2004s1
tuning_goal: performance

[autotune_tmc stepper_z]
motor: omc-17hs19-2004s1
tuning_goal: performance

[autotune_tmc stepper_y]
motor: omc-17hs19-2004s1
tuning_goal: performance

[tmc2209 stepper_x]
interpolate: true
uart_pin: PC11
tx_pin: PC10
uart_address: 0
run_current: 1.2
interpolate: False
stealthchop_threshold: 0
sense_resistor: 0.110

[tmc2209 stepper_y]
interpolate: true
uart_pin: PC11
tx_pin: PC10
uart_address: 2
run_current: 0.7
interpolate: False
# stealthchop_threshold: 0
sense_resistor: 0.110

[tmc2209 stepper_z]
interpolate: true
uart_pin: PC11
tx_pin: PC10
uart_address: 1
run_current: 1.2
interpolate: False
stealthchop_threshold: 0
sense_resistor: 0.110

##################
### Bed Heater ###
##################
[heater_bed]
heater_pin: PC9
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC4
min_temp: 0
max_temp: 130

###################
## CPU/MCU temps ##
###################
[temperature_sensor Pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[temperature_sensor SKR Mini]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

##########
## Fans ##
##########
[controller_fan rear_fan]
pin: PC7
heater: heater_bed

[controller_fan front_fan]
pin: PC6
heater: heater_bed

########################
## Chamber Thermistor ##
########################
[temperature_sensor chamber]
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PA0


# [shaketune]
# result_folder: ~/printer_data/config/ShakeTune_results
# #    Path where the processed results will be stored. If the folder doesn't exist,
# #    it will be automatically created. You can change this if you'd like to store 
# #    results in a different location.
# number_of_results_to_keep: 10
# #    This setting defines how many results you want to keep in the result folder.
# #    Once the specified number is exceeded, older results will be automatically deleted
# #    to free up space on the SD card and avoid cluttering the results folder.
# keep_raw_data: False
# #    If set to True, Shake&Tune will store both the processed graphs and the raw accelerometer
# #    .stdata files in the results folder. This can be useful for debugging or archiving purposes.
# #    Please always attach them when reporting any issues on GitHub or Discord.
# show_macros_in_webui: True
# #    Mainsail and Fluidd doesn't create buttons for system commands (macros that are not part
# #    of the printer.cfg file). This option allow Shake&Tune to inject them into the webui at runtime.
# #    If set to False, the macros will be hidden but still accessible from the console by typing
# #    their names manually, which can be useful if you prefer to encapsulate them into your own macros.
# timeout: 600
# #    This defines the maximum processing time (in seconds) to allows to Shake&Tune for generating 
# #    graphs from a .stdata file. 10 minutes should be more than enough in most cases, but if you have
# #    slower hardware (e.g., older SD cards or low-performance devices), increase it to prevent timeouts.
# measurements_chunk_size: 2
# #    Each Shake&Tune command uses the accelerometer to take multiple measurements. By default,
# #    Shake&Tune will write a chunk of data to disk every two measurements, and at the end of the
# #    command will merge these chunks into the final .stdata file for processing. "2" is a very
# #    conservative setting to avoid Klipper Timer Too Close errors on lower end devices with little
# #    RAM, and should work for everyone. However, if you are using a powerful computer, you may
# #    wish to increase this value to keep more measurements in memory (e.g., 15-20) before writing
# #    the chunk and avoid stressing the filesystem too much.
# max_freq: 200
# #    This setting defines the maximum frequency at which the calculation of the power spectral density
# #    is cutoff. The default value should be fine for most machines and accelerometer combinations and
# #    avoid touching it unless you know what you're doing.
# dpi: 300
# #    Controls the resolution of the generated graphs. The default value of 300 dpi was optimized
# #    and strikes a balance between performance and readability, ensuring that graphs are clear
# #    without using too much RAM to generate them. Usually, you shouldn't need to change this value.

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 68.906
#*# pid_ki = 1.415
#*# pid_kd = 838.929
#*# pid_version = 1
#*# pid_target = 100.00
#*# pid_tolerance = 0.0200
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 41.477
#*# pid_ki = 9.321
#*# pid_kd = 46.143
#*# pid_version = 1
#*# pid_target = 250.00
#*# pid_tolerance = 0.0200
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	-0.520833, -0.606250, -0.637500, -0.577083, -0.604167
#*# 	-0.536458, -0.595833, -0.584375, -0.593750, -0.610417
#*# 	-0.548958, -0.612500, -0.598958, -0.585417, -0.625000
#*# 	-0.569792, -0.598958, -0.618750, -0.608333, -0.640625
#*# 	-0.497917, -0.590625, -0.555208, -0.563542, -0.588542
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 4
#*# mesh_y_pps = 4
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 1.0
#*# max_x = 215.0
#*# min_y = 20.0
#*# max_y = 235.0
#*#
#*# [probe]
#*# z_offset = 5.264
#*#
#*# [input_shaper]
#*# shaper_type_y = zv
#*# shaper_freq_y = 31.6
#*# shaper_type_x = mzv
#*# shaper_freq_x = 55.0
