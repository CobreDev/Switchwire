############
# Display ##
############
[display 1.3-display]
lcd_type: sh1106
i2c_bus: i2c1_PB8_PB9
i2c_mcu = mcu
x_offset: 2

[display_template _print_status]
text:
  {% if printer.display_status.message %}
    { printer.display_status.message }
  {% elif printer.idle_timeout.printing_time %}
    { printer.print_stats.state.capitalize() }
  {% endif %}


[mcu display]
serial: /dev/serial/by-id/usb-Klipper_stm32f042x6_110024000543304846333520-if00
restart_method: command

[display]
lcd_type: uc1701
kill_pin: !display:PF0
spi_bus: spi1
cs_pin: display:PA4
a0_pin: display:PA2
# rst_pin: display:PA3
contrast: 63
encoder_pins: ^display:PA0, ^display:PA1
click_pin: ^!display:PB1
encoder_steps_per_detent: 2
#   How many steps the encoder emits per detent ("click"). If the
#   encoder takes two detents to move between entries or moves two
#   entries from one detent, try changing this. Allowed values are 2
#   (half-stepping) or 4 (full-stepping). The default is 4.


[output_pin BEEPER_pin]
pin: display:PF1
pwm: True
value: 0
shutdown_value: 0
cycle_time: 0.001
scale: 1000
 
[gcode_macro M300]
gcode:
    # Use a default 1kHz tone if S is omitted.
    {% set S = params.S|default(1000)|int %}
    # Use a 10ms duration is P is omitted.
    {% set P = params.P|default(100)|int %}
    SET_PIN PIN=BEEPER_pin VALUE={S} CYCLE_TIME={ 1.0/S if S > 0 else 1 }
    G4 P{P}
    SET_PIN PIN=BEEPER_pin VALUE=0

# name of neopixel should match name referenced in printer.cfg
# if there are other gcode_macros referencing the led display (e.g delayed gcode_macro)
[neopixel fysetc_mini12864]
pin: display:PA13
chain_count: 3
color_order: RGB
initial_RED: 1.00
initial_GREEN: 0.09
initial_BLUE: 0.00


[menu __main __temp __heatsoak_bed]
type: command
index: 0
enable: {('heater_bed' in printer)}
name: Heatsoak Bed
gcode:
    HEATSOAK_BED

[menu __main __temp __preheat_abs __all]
type: command
enable: {('extruder' in printer) and ('heater_bed' in printer)}
name: Preheat all
gcode:
    M140 S100
    M104 S250

[menu __main __temp __preheat_abs __hotend]
type: command
enable: {'extruder' in printer}
name: Preheat hotend
gcode: M104 S250

[menu __main __temp __preheat_abs __hotbed]
type: command
enable: {'heater_bed' in printer}
name: Preheat hotbed
gcode: M140 S100